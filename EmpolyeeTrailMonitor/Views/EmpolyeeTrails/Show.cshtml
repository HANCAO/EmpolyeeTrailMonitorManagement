@{
    ViewData["Title"] = "主页";
}

@{
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"
            integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0="
            crossorigin="anonymous"></script>
    <script type="text/javascript" src="https://api.map.baidu.com/api?v=2.0&ak=eQv0G7tIacmmSYWmkgj1gWoz"></script>

}

//显示地图的div
<div id="TrackMap" style="width: 100%; height: 550px; float: left;">

</div>




<script>

    var farmer_baidu_ = {
        user_id: '',
        user_name: '',
        mileage: '',
        car_mileage: '',
        address: '',
        reason: '',
        farmerList: [],
        //加载轨迹数据的ajax
        DrawTrajectory: function () {
            //farmer_baidu_.ajaxLoading("#TrackMap", ($(window).outerWidth(true) - 300) / 2, ($(window).height() - 150) / 2);
            // 百度地图API功能
            $.ajax({
                url: 'ReadTableList',
                type: 'post',
                //data: { bill_no: farmer_baidu_.bill_no, start_time: $("#start_time").timespinner("getValue"), end_time: $("#end_time").timespinner("getValue"), distance: $("#distance").textbox("getValue") },
                dataType: "json",
                success: function (value) {
                    debugger
                    if (value.rows.length > 0) {
                        var pointGCJ = [];
                        var pointBD = [];
                        //for (var i = 0; i < value.rows.length; i++) {
                        //    pointGCJ = wgs84togcj02(value.rows[i].gpsx, value.rows[i].gpsy);
                        //    pointBD = gcj02tobd09(pointGCJ[0], pointGCJ[1]);
                        //    value.rows[i].Bmap_lng = pointBD[0];
                        //    value.rows[i].Bmap_lat = pointBD[1];
                        //}
                        if (farmer_baidu_.Location_Map) {
                            var pointList = [];
                            for (var i = 0; i < value.rows.length; i = i + 1) {
                                farmer_baidu_.commonMap(farmer_baidu_.Location_Map, value, i);
                                pointList.push(new BMap.Point(value.rows[i].gpsx, value.rows[i].gpsy));
                            }
                            var polyline = new BMap.Polyline(pointList, { strokeColor: "blue", strokeWeight: 2, strokeOpacity: 0.5 });   //创建折线
                            farmer_baidu_.Location_Map.addOverlay(polyline);   //增加折线
                            farmer_baidu_.Location_Map.setCenter(new BMap.Point(value.rows[0].gpsx, value.rows[0].gpsy))
                            farmer_baidu_.Location_Map.setZoom(20);

                        }
                        else {
                            farmer_baidu_.farmerMap();
                            if (farmer_baidu_.Location_Map) {
                                var pointList = [];
                                for (var i = 0; i < value.rows.length; i = i + 1) {
                                    farmer_baidu_.commonMap(farmer_baidu_.Location_Map, value, i);
                                    pointList.push(new BMap.Point(value.rows[i].gpsx, value.rows[i].gpsy));

                                }

                                var polyline = new BMap.Polyline(pointList, { strokeColor: "blue", strokeWeight: 2, strokeOpacity: 0.5 });   //创建折线
                                farmer_baidu_.Location_Map.addOverlay(polyline);   //增加折线

                                farmer_baidu_.Location_Map.setCenter(new BMap.Point(value.rows[0].gpsx, value.rows[0].gpsy))
                                farmer_baidu_.Location_Map.setZoom(20);
                            }
                            else {
                                //$.messager.alert('提交结果', "地图无法加载，请联系技术人员！", 'error');
                            }
                        }

                    }
                    else {
                        //var str = "轨迹  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;开始时间：，结束时间：；补贴里程：" + farmer_baidu_.mileage + "，参考里程：" + farmer_baidu_.car_mileage + "；地点：" + farmer_baidu_.address + "，理由：" + farmer_baidu_.reason;
                        //$('#topPanel').panel('setTitle', str);
                        //$.messager.alert('加载结果', "暂无数据！", 'error');
                    }
                }
            })
        },
        bill_no: '',
        create_date: '',
        Location_Map: null,
        //在地图上标注点
        commonMap: function (map, value, i) {
            if (value.rows[i].gpsx != null && value.rows[i].gpsy != null) {
                var point = new BMap.Point(value.rows[i].gpsx, value.rows[i].gpsy);
                map.centerAndZoom(point, 11);
                var opts = {
                    position: point,    // 指定文本标注所在的地理位置
                    offset: new BMap.Size(10, 25)    //设置文本偏移量
                }
                var label = new BMap.Label(value.rows[i].createTime, opts);  // 创建文本标注对象
                var marker = new BMap.Marker(point);

                marker.setLabel(label);

                map.addOverlay(marker);
                label.setStyle({
                    borderColor: "#808080",
                    color: "#333",
                    cursor: "pointer"
                });

            }
        },
        //初始化百度地图
        farmerMap: function (x, y) {
            x = 0 || x;
            y = 0 || y;
            var farmerMapHYERP = new BMap.Map("TrackMap");
            farmerMapHYERP.addControl(new BMap.NavigationControl());               // 添加平移缩放控件
            farmerMapHYERP.addControl(new BMap.ScaleControl());                    // 添加比例尺控件
            farmerMapHYERP.addControl(new BMap.OverviewMapControl());
            farmerMapHYERP.addControl(new BMap.MapTypeControl());
            farmerMapHYERP.enableScrollWheelZoom(true);  //添加滚轮缩放
            farmerMapHYERP.enableDragging(); //启用地图拖拽事件，默认启用(可不写)
            farmerMapHYERP.enableDoubleClickZoom(); //启用鼠标双击放大，默认启用(可不写)
            farmerMapHYERP.enableKeyboard(); //启用键盘上下左右键移动地图
            //farmerMapHYERP.centerAndZoom(new BMap.Point(value.rows[0].Bmap_lng, value.rows[0].Bmap_lat), 11);  // 初始化地图
            farmer_baidu_.Location_Map = farmerMapHYERP;
            farmerMapHYERP.setCurrentCity("北京");
            farmerMapHYERP.centerAndZoom(new BMap.Point(x, y), 11);  // 初始化地图
            //farmer_baidu_.DrawTrajectory();
        },
        //创建InfoWindow
        createInfoWindow: function (i) {
            var json = i;
            var iw = new BMap.InfoWindow("<b class='iw_poi_title' title='" + json.name + "'>" + json.name + "</b><div class='iw_poi_content'>" + json.map_info + "</div>");
            return iw;
        }
    }
    $(function () {
        farmer_baidu_.DrawTrajectory();
        //account_user_trail_.init();
    });

    var wgs84togcj02 = function wgs84togcj02(lng, lat) {
        var lat = +lat;
        var lng = +lng;
        if (out_of_china(lng, lat)) {
            return [lng, lat]
        } else {
            var dlat = transformlat(lng - 105.0, lat - 35.0);
            var dlng = transformlng(lng - 105.0, lat - 35.0);
            var radlat = lat / 180.0 * PI;
            var magic = Math.sin(radlat);
            magic = 1 - ee * magic * magic;
            var sqrtmagic = Math.sqrt(magic);
            dlat = (dlat * 180.0) / ((a * (1 - ee)) / (magic * sqrtmagic) * PI);
            dlng = (dlng * 180.0) / (a / sqrtmagic * Math.cos(radlat) * PI);
            var mglat = lat + dlat;
            var mglng = lng + dlng;
            return [mglng, mglat]
        }
    };


    var gcj02tobd09 = function gcj02tobd09(lng, lat) {
        var lat = +lat;
        var lng = +lng;
        var z = Math.sqrt(lng * lng + lat * lat) + 0.00002 * Math.sin(lat * x_PI);
        var theta = Math.atan2(lat, lng) + 0.000003 * Math.cos(lng * x_PI);
        var bd_lng = z * Math.cos(theta) + 0.0065;
        var bd_lat = z * Math.sin(theta) + 0.006;
        return [bd_lng, bd_lat]
    };

    var out_of_china = function out_of_china(lng, lat) {
        var lat = +lat;
        var lng = +lng;
        // 纬度3.86~53.55,经度73.66~135.05
        return !(lng > 73.66 && lng < 135.05 && lat > 3.86 && lat < 53.55);
    };

    var transformlat = function transformlat(lng, lat) {
        var lat = +lat;
        var lng = +lng;
        var ret = -100.0 + 2.0 * lng + 3.0 * lat + 0.2 * lat * lat + 0.1 * lng * lat + 0.2 * Math.sqrt(Math.abs(lng));
        ret += (20.0 * Math.sin(6.0 * lng * PI) + 20.0 * Math.sin(2.0 * lng * PI)) * 2.0 / 3.0;
        ret += (20.0 * Math.sin(lat * PI) + 40.0 * Math.sin(lat / 3.0 * PI)) * 2.0 / 3.0;
        ret += (160.0 * Math.sin(lat / 12.0 * PI) + 320 * Math.sin(lat * PI / 30.0)) * 2.0 / 3.0;
        return ret
    };

    var transformlng = function transformlng(lng, lat) {
        var lat = +lat;
        var lng = +lng;
        var ret = 300.0 + lng + 2.0 * lat + 0.1 * lng * lng + 0.1 * lng * lat + 0.1 * Math.sqrt(Math.abs(lng));
        ret += (20.0 * Math.sin(6.0 * lng * PI) + 20.0 * Math.sin(2.0 * lng * PI)) * 2.0 / 3.0;
        ret += (20.0 * Math.sin(lng * PI) + 40.0 * Math.sin(lng / 3.0 * PI)) * 2.0 / 3.0;
        ret += (150.0 * Math.sin(lng / 12.0 * PI) + 300.0 * Math.sin(lng / 30.0 * PI)) * 2.0 / 3.0;
        return ret
    };


    //定义一些常量
    var x_PI = 3.14159265358979324 * 3000.0 / 180.0;
    var PI = 3.1415926535897932384626;
    var a = 6378245.0;
    var ee = 0.00669342162296594323;
/**
     * Created by Wandergis on 2015/7/8. 使用小程序里的coordtransform.js
     * 提供了百度坐标（BD09）、国测局坐标（火星坐标，GCJ02）、和WGS84坐标系之间的转换
     */
//UMD魔法代码
// if the module has no dependencies, the above pattern can be simplified to



</script>